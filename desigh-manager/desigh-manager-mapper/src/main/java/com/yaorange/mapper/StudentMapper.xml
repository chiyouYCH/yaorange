<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yaorange.mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.yaorange.pojo.Student" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="studentNo" property="studentno" jdbcType="VARCHAR" />
    <result column="studentName" property="studentname" jdbcType="VARCHAR" />
    <result column="idCardNo" property="idcardno" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="graduationTime" property="graduationtime" jdbcType="DATE" />
    <result column="className" property="classname" jdbcType="VARCHAR" />
    <result column="directionalName" property="directionalname" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yaorange.pojo.Student" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, studentNo, studentName, idCardNo, password, school, major, education, phone, 
    qq, graduationTime, className, directionalName
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yaorange.pojo.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yaorange.pojo.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yaorange.pojo.StudentExample" >
    delete from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yaorange.pojo.Student" >
    insert into student (id, studentNo, studentName, 
      idCardNo, password, school, 
      major, education, phone, 
      qq, graduationTime, className, 
      directionalName, remark)
    values (#{id,jdbcType=INTEGER}, #{studentno,jdbcType=VARCHAR}, #{studentname,jdbcType=VARCHAR}, 
      #{idcardno,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{major,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{graduationtime,jdbcType=DATE}, #{classname,jdbcType=VARCHAR}, 
      #{directionalname,jdbcType=VARCHAR}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yaorange.pojo.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentno != null" >
        studentNo,
      </if>
      <if test="studentname != null" >
        studentName,
      </if>
      <if test="idcardno != null" >
        idCardNo,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="graduationtime != null" >
        graduationTime,
      </if>
      <if test="classname != null" >
        className,
      </if>
      <if test="directionalname != null" >
        directionalName,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentno != null" >
        #{studentno,jdbcType=VARCHAR},
      </if>
      <if test="studentname != null" >
        #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="idcardno != null" >
        #{idcardno,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="graduationtime != null" >
        #{graduationtime,jdbcType=DATE},
      </if>
      <if test="classname != null" >
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="directionalname != null" >
        #{directionalname,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yaorange.pojo.StudentExample" resultType="java.lang.Integer" >
    select count(*) from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentno != null" >
        studentNo = #{record.studentno,jdbcType=VARCHAR},
      </if>
      <if test="record.studentname != null" >
        studentName = #{record.studentname,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardno != null" >
        idCardNo = #{record.idcardno,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null" >
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null" >
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null" >
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.graduationtime != null" >
        graduationTime = #{record.graduationtime,jdbcType=DATE},
      </if>
      <if test="record.classname != null" >
        className = #{record.classname,jdbcType=VARCHAR},
      </if>
      <if test="record.directionalname != null" >
        directionalName = #{record.directionalname,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update student
    set id = #{record.id,jdbcType=INTEGER},
      studentNo = #{record.studentno,jdbcType=VARCHAR},
      studentName = #{record.studentname,jdbcType=VARCHAR},
      idCardNo = #{record.idcardno,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      graduationTime = #{record.graduationtime,jdbcType=DATE},
      className = #{record.classname,jdbcType=VARCHAR},
      directionalName = #{record.directionalname,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student
    set id = #{record.id,jdbcType=INTEGER},
      studentNo = #{record.studentno,jdbcType=VARCHAR},
      studentName = #{record.studentname,jdbcType=VARCHAR},
      idCardNo = #{record.idcardno,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      graduationTime = #{record.graduationtime,jdbcType=DATE},
      className = #{record.classname,jdbcType=VARCHAR},
      directionalName = #{record.directionalname,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yaorange.pojo.Student" >
    update student
    <set >
      <if test="studentno != null" >
        studentNo = #{studentno,jdbcType=VARCHAR},
      </if>
      <if test="studentname != null" >
        studentName = #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="idcardno != null" >
        idCardNo = #{idcardno,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="graduationtime != null" >
        graduationTime = #{graduationtime,jdbcType=DATE},
      </if>
      <if test="classname != null" >
        className = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="directionalname != null" >
        directionalName = #{directionalname,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yaorange.pojo.Student" >
    update student
    set studentNo = #{studentno,jdbcType=VARCHAR},
      studentName = #{studentname,jdbcType=VARCHAR},
      idCardNo = #{idcardno,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      graduationTime = #{graduationtime,jdbcType=DATE},
      className = #{classname,jdbcType=VARCHAR},
      directionalName = #{directionalname,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yaorange.pojo.Student" >
    update student
    set studentNo = #{studentno,jdbcType=VARCHAR},
      studentName = #{studentname,jdbcType=VARCHAR},
      idCardNo = #{idcardno,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      graduationTime = #{graduationtime,jdbcType=DATE},
      className = #{classname,jdbcType=VARCHAR},
      directionalName = #{directionalname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>